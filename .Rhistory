) %>% fct_recode(
Asian = "A",
Black = "B",
Mixed = "mixed",
White = "W",
Other = "other"
)
) %>%
filter(ethnicity != "") %>%
select(subject_id, child_ethnicity, ethnicity) %>%
count(ethnicity)
return(clean_data)
}
old_ethnicity_numbers <-
tibble(
ethnicity = c("Asian", "Black", "Mixed", "White"),
`2007 manual` = c(.069, .105, .063, .733)
)
total_proportions_ethnicity <-
bind_rows(
ses_wg %>% getEthnicities() ,
ses_ws %>% getEthnicities(),
ses_pilot %>% getEthnicities()
) %>%
count(ethnicity, wt = n, name = "current_study") %>%
mutate(proportion = prop.table(current_study)) %>%
left_join(old_ethnicity_numbers, by = "ethnicity") %>%
rename(
`Current study` = proportion
) %>%
filter(ethnicity != "Other") %>%
select(-current_study) %>%
pivot_longer(
cols = c(`Current study`, `2007 manual`),
names_to = "study",
values_to = "proportion"
)
#df for ethnicity plot
ses_wg_ethnicity <-
ses_wg %>%
bind_rows(ses_pilot) %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
getEthnicities()
ses_wg_ethnicity_n <-
nrow(
ses_wg %>%
bind_rows(ses_pilot) %>%
getCompletionInterval() %>%
filter(completion_time > 6)
)
ses_wg_ethnicity_plot <-
ses_wg_ethnicity %>%
ggplot(aes(ethnicity, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(
x = "Ethnicity",
y = "Proportion of respondents",
title = "Current Words and Gestures study compared to 2007 manual",
subtitle = "Excludes children who are prematurely born, are multilingual, were born underweight,\nhave vision or hearing loss, or who completed the survey in under 6 minutes"
) +
theme_few() +
theme(
legend.title = element_blank(),
legend.position = "bottom",
axis.text = element_text(size = 10)
) +
annotate(
"text",
label = str_c("N = ", ses_wg_ethnicity_n),
x = 3.5,
y = 0.85,
hjust = "center"
)
ses_ws_ethnicity <-
ses_ws %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
getEthnicities()
ses_ws_ethnicity_n <-
ses_ws %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
nrow()
# ses_ws_ethnicity %>%
#   ggplot(aes(ethnicity, proportion, fill = study)) +
#   geom_col(position = "dodge") +
#   labs(
#     x = "Ethnicity",
#     y = "Proportion of respondents",
#     title = "Current WS compared to 2007 manual",
#     subtitle = "Excludes children who are prematurely born, are multilingual, were born underweight,\nhave vision or hearing loss, or who completed the survey in under 6 minutes"
#   ) +
#   theme_few() +
#   theme(legend.title = element_blank()) +
#   annotate(
#     "text",
#     label = str_c("N = ", ses_ws_ethnicity_n),
#     x = 2.0,
#     y = 0.85,
#     hjust = "center"
#   )
#grant proposal plot of ethnicity
grant_ethnicity_plot <-
total_proportions_ethnicity %>%
ggplot(aes(ethnicity, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(
y = "Proportion of\nrespondents",
title = "Pilot study: Ethnicity"
) +
theme_few() +
theme(
legend.title = element_blank(),
legend.position = "none",
axis.text = element_text(size = 14),
axis.title = element_text(size = 13),
legend.text = element_text(size = 13),
axis.title.x = element_blank(),
plot.title = element_text(size = 15)
)
grant_ethnicity_plot
ggsave(
filename = "grant_ethnicity",
device = "jpeg",
path = fs::path(project_root, "plots"),
height = 2.7,
width = 4.5,
units = "in"
)
getMaternalEd <- function(data) {
clean_data <-
data %>%
select(subject_id, mother_education, study_name) %>%
mutate(
maternal_ed = case_when(
mother_education <= 11 ~ "Some high school or less",
mother_education == 12 ~ "High school diploma",
mother_education %in% seq.int(13, 15) ~
"Some college education",
mother_education >= 16 ~ "College diploma or more"
)
)
}
aggregate_maternal_ed <-
bind_rows(
ses_pilot_time_filtered %>% getMaternalEd(),
ses_wg_time_filtered %>% getMaternalEd(),
ses_ws_time_filtered %>% getMaternalEd()
)
old_props <-
tibble(
maternal_ed = c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
),
study_name = "2007 manual",
`Study proportion` = c(.075, .2385, .248, .4385)
)
aggregate_maternal_ed %>%
count(maternal_ed, study_name) %>%
group_by(study_name) %>%
mutate(
`Study proportion` = n / sum(n)
) %>%
select(-n) %>%
bind_rows(old_props) %>%
mutate(
maternal_ed = fct_relevel(
maternal_ed,
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
) %>%
ggplot(aes(maternal_ed, `Study proportion`, fill = `study_name`)) +
geom_col(position = "dodge") +
labs(
x = "Education Level",
y = "Proportion of respondents"
) +
theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 10, vjust = 0.9, hjust = 1, size = 8),
axis.title.x = element_text()
)
x_axis_labs <- c(
"Some high school\n or less",
"High school\ndiploma",
"Some college\neducation",
"College diploma\nor more"
)
aggregate_maternal_ed %>%
count(maternal_ed) %>%
mutate(
study_name = "Current study",
`Study proportion` = n / sum(n)
) %>%
select(-n) %>%
bind_rows(old_props) %>%
mutate(
maternal_ed = fct_relevel(
maternal_ed,
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
) %>%
ggplot(aes(maternal_ed, `Study proportion`, fill = `study_name`)) +
geom_col(position = "dodge") +
labs(
x = "Education Level",
y = "Proportion of\nrespondents",
title = "Pilot study: Maternal education"
) +
theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 30, vjust = 0.9, hjust = 1, size = 13.5),
axis.title.x = element_blank(),
legend.position = "none",
legend.text = element_text(size = 13)
) +
scale_x_discrete(labels = x_axis_labs)
ggsave(
filename = "grant_maternal_ed",
device = "jpeg",
path = fs::path(project_root, "plots"),
height = 3.5,
width = 5.0,
units = "in"
)
all_wg_time_filtered <-
ses_pilot_time_filtered %>%
bind_rows(ses_wg_time_filtered)
wg_maternal_ed <-
bind_rows(
ses_pilot_time_filtered %>% getMaternalEd(),
ses_wg_time_filtered %>% getMaternalEd()
) %>%
left_join(
all_wg_time_filtered %>%
select(subject_id, study_name, age, `Words Understood`, `Words Produced`),
by = c("study_name", "subject_id")
) %>%
mutate_at(
.funs = ~case_when(
is.na(.) ~ 0, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Words"))
) %>%
mutate(
age = as.numeric(age),
maternal_ed = fct_relevel(
.f = maternal_ed,
c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
)
)
ws_maternal_ed <-
ses_ws_time_filtered %>%
getMaternalEd() %>%
left_join(
ses_ws_time_filtered %>%
select(subject_id, study_name, age, `Total Produced`),
by = c("study_name", "subject_id")
) %>%
mutate_at(
.funs = ~case_when(
is.na(.) ~ 0, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Words"))
) %>%
mutate(
age = as.numeric(age),
maternal_ed = fct_relevel(
.f = maternal_ed,
c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
)
)
wg_maternal_ed %>%
ggplot(aes(age, `Words Understood`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
coord_cartesian(ylim = c(-20, 420)) +
ggthemes::theme_few() +
labs(title = "Age and words understood, WG")
wg_maternal_ed %>%
ggplot(aes(age, `Words Produced`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
ggthemes::theme_few() +
labs(title = "Age and words produced, WG")
ws_maternal_ed %>%
ggplot(aes(age, `Total Produced`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
ggthemes::theme_few() +
labs(title = "Age and words produced, WG")
View(aggregate_ct_age_completed)
View(aggregate_ct_age_completed)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
library(zipcode)
library(ggmap)
library(lubridate)
source(path(here::here(), "file_paths.R"))
#accepts: path to directory of WebCDI summary score files
#returns: aggregated cleaned data
readInWebCDI <- function(directory) {
clean_data <-
directory %>%
map_df(~read_csv(., col_types = cols(.default = col_character()))) %>% #read in columns as a character
mutate_at(
.funs = ~case_when(
str_detect(., "<") ~ 1, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Percentile"))
) %>%
mutate_at(
.funs = ~as.numeric(.), #turn all the quantitative columns back into numeric
.vars =
vars(
which(colnames(.) == "benchmark age"):ncol(.)
)
)
return(clean_data)
}
readInWebCdiSummary <- function(summary_df) {
clean_data <-
read_csv(summary_df, col_types = cols(.default = col_character())) %>%
mutate_at(
.funs = ~case_when(
str_detect(., "<") ~ 1, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Percentile"))
) %>%
mutate_at(
.funs = ~as.numeric(.), #turn all the quantitative columns back into numeric
.vars =
vars(
which(colnames(.) == "benchmark age"):ncol(.)
)
)
}
ses_pilot_raw <- readInWebCdiSummary(ses_pilot_wg)
ses_round_1_wg_raw <-  readInWebCdiSummary(ses_round_1_aggregated_wg)
ses_round_1_ws_raw <-  readInWebCdiSummary(ses_round_1_aggregated_ws)
pilot_n <- ses_pilot_raw %>% nrow()
ses_round_1_wg_n <- ses_round_1_wg_raw %>% nrow()
ses_round_1_ws_n <- ses_round_1_ws_raw %>% nrow()
total_n <- pilot_n + ses_round_1_wg_n + ses_round_1_ws_n
#raw_completed denotes dfs that have data of only completed admins but aren't filtered for exclusions
ses_pilot_raw_completed <- ses_pilot_raw %>% filter(completed == TRUE)
ses_wg_raw_completed <- ses_round_1_wg_raw %>% filter(completed == TRUE)
ses_ws_raw_completed <- ses_round_1_ws_raw %>% filter(completed == TRUE)
pilot_n_completed <- ses_pilot_raw_completed %>% nrow()
ses_round_1_wg_n_completed <- ses_wg_raw_completed %>% nrow()
ses_round_1_ws_n_completed <- ses_ws_raw_completed %>% nrow()
total_completed_n <-
nrow(ses_pilot_raw_completed) +
nrow(ses_wg_raw_completed) +
nrow(ses_ws_raw_completed)
filterBirthweight <- function(data) {
clean_data <-
data %>%
mutate_at(
.vars = c("due_date_diff", "birth_weight_lb"),
.funs = ~as.numeric(.)
) %>%
mutate_at(
.vars = c("due_date_diff"),
.funs = ~case_when(
is.na(.) ~ 0, #turn non-NA's in this column into zeros
TRUE ~ .
)
) %>%
mutate(premature = due_date_diff >= 4 & birth_weight_lb < 5.5) %>%
filter(premature == FALSE)
return(clean_data)
}
filterMultilingual <- function(data) {
clean_data <-
data %>%
mutate_at(
.vars = c("language_days_per_week", "language_hours_per_day"),
.funs = ~as.numeric(.)
) %>%
mutate(
language_hours_per_week = language_days_per_week * language_hours_per_day
) %>%
filter(is.na(language_hours_per_week) | language_hours_per_week <= 16)
}
filterVision <- function(data) {
clean_data <-
data %>%
filter(
hearing_loss_boolean != "1" | is.na(hearing_loss_boolean),
vision_problems_boolean != "1" | is.na(vision_problems_boolean)
)
return(clean_data)
}
ses_pilot_birthweights <-
ses_pilot_raw_completed %>%
filterBirthweight()
ses_pilot_birthweights_loss <- pilot_n_completed - nrow(ses_pilot_birthweights)
ses_round_1_wg_birthweights <-
ses_wg_raw_completed %>%
filterBirthweight()
ses_round_1_wg_birthweights_loss <-
ses_round_1_wg_n_completed - nrow(ses_round_1_wg_birthweights)
ses_round_1_ws_birthweights <-
ses_ws_raw_completed %>%
filterBirthweight()
ses_round_1_ws_birthweights_loss <-
ses_round_1_ws_n_completed - nrow(ses_round_1_ws_birthweights)
total_birthweight_loss <-
ses_pilot_birthweights_loss +
ses_round_1_wg_birthweights_loss +
ses_round_1_ws_birthweights_loss
ses_pilot_multi <-
ses_pilot_raw_completed %>%
filterMultilingual()
ses_pilot_multi_loss <- pilot_n_completed - nrow(ses_pilot_multi)
ses_round_1_wg_multi <-
ses_wg_raw_completed %>%
filterMultilingual()
ses_round_1_wg_multi_loss <-
ses_round_1_wg_n_completed - nrow(ses_round_1_wg_multi)
ses_round_1_ws_multi <-
ses_ws_raw_completed %>%
filterMultilingual()
ses_round_1_ws_multi_loss <-
ses_round_1_ws_n_completed - nrow(ses_round_1_ws_multi)
total_multi_loss <-
ses_pilot_multi_loss +
ses_round_1_wg_multi_loss +
ses_round_1_ws_multi_loss
ses_pilot_vision <-
ses_pilot_raw_completed %>%
filterVision()
ses_pilot_vision_loss <- pilot_n_completed - nrow(ses_pilot_vision)
ses_round_1_wg_vision <-
ses_wg_raw_completed %>%
filterVision()
ses_round_1_wg_vision_loss <-
ses_round_1_wg_n_completed - nrow(ses_round_1_wg_vision)
ses_round_1_ws_vision <-
ses_ws_raw_completed %>%
filterVision()
ses_round_1_ws_vision_loss <-
ses_round_1_ws_n_completed - nrow(ses_round_1_ws_vision)
total_vision_loss <-
ses_pilot_vision_loss +
ses_round_1_wg_vision_loss +
ses_round_1_ws_vision_loss
ses_pilot <-
ses_pilot_raw %>%
filter(completed == TRUE) %>%
filterBirthweight() %>%
filterMultilingual() %>%
filterVision()
ses_pilot_total_loss <- pilot_n_completed - nrow(ses_pilot)
ses_wg <-
ses_round_1_wg_raw %>%
filter(completed == TRUE) %>%
filterBirthweight() %>%
filterMultilingual() %>%
filterVision()
ses_wg_total_loss <- ses_round_1_wg_n_completed - nrow(ses_wg)
ses_ws <-
ses_round_1_ws_raw %>%
filter(completed == TRUE) %>%
filterBirthweight() %>%
filterMultilingual() %>%
filterVision()
ses_ws_total_loss <- ses_round_1_ws_n_completed - nrow(ses_ws)
total_loss <-
ses_pilot_total_loss +
ses_wg_total_loss +
ses_ws_total_loss
View(ses_ws)
?fct_relevel
?fct_reorder
