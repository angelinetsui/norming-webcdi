ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("language_days_per_week", "language_hours_per_day"),
.funs = ~as.numeric(.)
) %>%
mutate(
language_hours_per_week = language_days_per_week * language_hours_per_day
) %>%
filter(is.na(language_hours_per_week) | language_hours_per_week <= 16)
#ask about this to Mike because there should be a way to condense this code
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("due_date_diff", "birth_weight_lb"),
.funs = ~as.numeric(.)
) %>%
mutate_at(
.vars = c("due_date_diff"),
.funs = ~case_when(
is.na(.) ~ 0, #turn non-NA's in this column into zeros
TRUE ~ .
)
) %>%
mutate(premature = due_date_diff >= 4 & birth_weight_lb < 5.5) %>%
filter(premature == FALSE)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate( #get rid of brackets in ethnicity column
child_ethnicity = str_replace_all(child_ethnicity, "[^[:upper:]]", "")
) %>%
mutate(
ethnicity_white = str_detect(child_ethnicity, "W"),
ethnicity_black = str_detect(child_ethnicity, "B"),
ethnicity_asian = str_detect(child_ethnicity, "A"),
ethnicity_native = str_detect(child_ethnicity, "N"),
ethnicity_other = str_detect(child_ethnicity, "O"),
ethnicity_mixed = str_length(child_ethnicity) > 1
)
#make a dataframe to plot ethnicity statistics
ethnicity_demographics <-
ses_pilot_raw %>%
summarize_at(
.vars = vars(starts_with("ethnicity")),
.funs = ~ mean(., na.rm = TRUE)
) %>%
gather(key = "ethnicity", value = "proportion", everything()) %>%
mutate(ethnicity = str_replace(ethnicity, "ethnicity_", ""))
ethnicity_demographics %>%
ggplot(aes(reorder(ethnicity, -proportion), proportion)) +
geom_col() +
labs(
x = "ethnicity"
)
#get rid of text in education columns
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = vars(contains("education")),
.funs = function(ed_value) {
print(ed_value)
num_years_ed <-
ed_value %>%
str_replace_all("[^[:digit:]|\\.]", "") %>%
as.numeric()
return(num_years_ed)
}
) %>%
mutate(age = as.numeric(age))
ses_pilot_raw %>%
ggplot(aes(age, `Words Understood`)) +
geom_point() +
geom_smooth(method = "loess")
ses_pilot_raw %>%
ggplot(aes(age, `Words Produced`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education, `Words Understood`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education)) +
geom_histogram()
ses_pilot_raw %>%
count(sex)
ses_pilot_raw %>%
count(child_hispanic_latino)
mean(ses_pilot_raw$`Words Produced Percentile-both`)
mean(ses_pilot_raw$`Words Understood Percentile-both`)
View(ses_pilot_raw)
data("zipcode")
View(zipcode)
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3))
View(three_digit_avg)
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix, state) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate(zip_code = str_extract_all(zip_code, "[:digit:]"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
source(path(here::here(), "file_paths.R"))
ses_pilot_raw <-
ses_pilot_directory %>%
map_df(~read_csv(., col_types = cols(.default = col_character()))) %>% #read in columns as a character
mutate_at(
.funs = ~case_when(
str_detect(., "<") ~ 1, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Percentile"))
) %>%
mutate_at(
.funs = ~as.numeric(.), #turn all the quantitative columns back into numeric
.vars =
vars(
which(colnames(.) == "benchmark age"):ncol(.)
)
)
ses_pilot_raw %>%
count(child_hispanic_latino)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("language_days_per_week", "language_hours_per_day"),
.funs = ~as.numeric(.)
) %>%
mutate(
language_hours_per_week = language_days_per_week * language_hours_per_day
) %>%
filter(is.na(language_hours_per_week) | language_hours_per_week <= 16)
#ask about this to Mike because there should be a way to condense this code
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("due_date_diff", "birth_weight_lb"),
.funs = ~as.numeric(.)
) %>%
mutate_at(
.vars = c("due_date_diff"),
.funs = ~case_when(
is.na(.) ~ 0, #turn non-NA's in this column into zeros
TRUE ~ .
)
) %>%
mutate(premature = due_date_diff >= 4 & birth_weight_lb < 5.5) %>%
filter(premature == FALSE)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate( #get rid of brackets in ethnicity column
child_ethnicity = str_replace_all(child_ethnicity, "[^[:upper:]]", "")
) %>%
mutate(
ethnicity_white = str_detect(child_ethnicity, "W"),
ethnicity_black = str_detect(child_ethnicity, "B"),
ethnicity_asian = str_detect(child_ethnicity, "A"),
ethnicity_native = str_detect(child_ethnicity, "N"),
ethnicity_other = str_detect(child_ethnicity, "O"),
ethnicity_mixed = str_length(child_ethnicity) > 1
)
#make a dataframe to plot ethnicity statistics
ethnicity_demographics <-
ses_pilot_raw %>%
summarize_at(
.vars = vars(starts_with("ethnicity")),
.funs = ~ mean(., na.rm = TRUE)
) %>%
gather(key = "ethnicity", value = "proportion", everything()) %>%
mutate(ethnicity = str_replace(ethnicity, "ethnicity_", ""))
ethnicity_demographics %>%
ggplot(aes(reorder(ethnicity, -proportion), proportion)) +
geom_col() +
labs(
x = "ethnicity"
)
#get rid of text in education columns
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = vars(contains("education")),
.funs = function(ed_value) {
print(ed_value)
num_years_ed <-
ed_value %>%
str_replace_all("[^[:digit:]|\\.]", "") %>%
as.numeric()
return(num_years_ed)
}
) %>%
mutate(age = as.numeric(age))
ses_pilot_raw %>%
ggplot(aes(age, `Words Understood`)) +
geom_point() +
geom_smooth(method = "loess")
ses_pilot_raw %>%
ggplot(aes(age, `Words Produced`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education, `Words Understood`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education)) +
geom_histogram()
ses_pilot_raw %>%
count(sex)
ses_pilot_raw %>%
count(child_hispanic_latino)
mean(ses_pilot_raw$`Words Produced Percentile-both`)
mean(ses_pilot_raw$`Words Understood Percentile-both`)
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]"))
ses_pilot_raw <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", ""))
?left_join
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
source(path(here::here(), "file_paths.R"))
ses_pilot_raw <-
ses_pilot_directory %>%
map_df(~read_csv(., col_types = cols(.default = col_character()))) %>% #read in columns as a character
mutate_at(
.funs = ~case_when(
str_detect(., "<") ~ 1, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Percentile"))
) %>%
mutate_at(
.funs = ~as.numeric(.), #turn all the quantitative columns back into numeric
.vars =
vars(
which(colnames(.) == "benchmark age"):ncol(.)
)
)
ses_pilot_raw %>%
count(child_hispanic_latino)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("language_days_per_week", "language_hours_per_day"),
.funs = ~as.numeric(.)
) %>%
mutate(
language_hours_per_week = language_days_per_week * language_hours_per_day
) %>%
filter(is.na(language_hours_per_week) | language_hours_per_week <= 16)
#ask about this to Mike because there should be a way to condense this code
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = c("due_date_diff", "birth_weight_lb"),
.funs = ~as.numeric(.)
) %>%
mutate_at(
.vars = c("due_date_diff"),
.funs = ~case_when(
is.na(.) ~ 0, #turn non-NA's in this column into zeros
TRUE ~ .
)
) %>%
mutate(premature = due_date_diff >= 4 & birth_weight_lb < 5.5) %>%
filter(premature == FALSE)
ses_pilot_raw <-
ses_pilot_raw %>%
mutate( #get rid of brackets in ethnicity column
child_ethnicity = str_replace_all(child_ethnicity, "[^[:upper:]]", "")
) %>%
mutate(
ethnicity_white = str_detect(child_ethnicity, "W"),
ethnicity_black = str_detect(child_ethnicity, "B"),
ethnicity_asian = str_detect(child_ethnicity, "A"),
ethnicity_native = str_detect(child_ethnicity, "N"),
ethnicity_other = str_detect(child_ethnicity, "O"),
ethnicity_mixed = str_length(child_ethnicity) > 1
)
#make a dataframe to plot ethnicity statistics
ethnicity_demographics <-
ses_pilot_raw %>%
summarize_at(
.vars = vars(starts_with("ethnicity")),
.funs = ~ mean(., na.rm = TRUE)
) %>%
gather(key = "ethnicity", value = "proportion", everything()) %>%
mutate(ethnicity = str_replace(ethnicity, "ethnicity_", ""))
ethnicity_demographics %>%
ggplot(aes(reorder(ethnicity, -proportion), proportion)) +
geom_col() +
labs(
x = "ethnicity"
)
#get rid of text in education columns
ses_pilot_raw <-
ses_pilot_raw %>%
mutate_at(
.vars = vars(contains("education")),
.funs = function(ed_value) {
print(ed_value)
num_years_ed <-
ed_value %>%
str_replace_all("[^[:digit:]|\\.]", "") %>%
as.numeric()
return(num_years_ed)
}
) %>%
mutate(age = as.numeric(age))
ses_pilot_raw %>%
ggplot(aes(age, `Words Understood`)) +
geom_point() +
geom_smooth(method = "loess")
ses_pilot_raw %>%
ggplot(aes(age, `Words Produced`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education, `Words Understood`)) +
geom_point()
ses_pilot_raw %>%
ggplot(aes(mother_education)) +
geom_histogram()
ses_pilot_raw %>%
count(sex)
ses_pilot_raw %>%
count(child_hispanic_latino)
mean(ses_pilot_raw$`Words Produced Percentile-both`)
mean(ses_pilot_raw$`Words Understood Percentile-both`)
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_zips <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
left_join(
three_digit_avg,
by = c("zip_code" = "prefix")
)
View(ses_pilot_zips)
ses_pilot_zips <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
left_join(
three_digit_avg,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, mean_lat, mean_long)
View(ses_pilot_zips)
qmplot(mean_long, mean_lat, data = ses_pilot_zips, maptype = "toner-lite")
get_googlemap("united states")
get_googlemap("united states", zoom = 12, maptype = "hybrid") %>% ggmap()
qmplot(
mean_long,
mean_lat,
data = ses_pilot_zips,
maptype = "toner-lite",
zoom = 15
)
qmplot(
mean_long,
mean_lat,
data = ses_pilot_zips,
maptype = "toner-lite",
zoom = 12
)
qmplot(
mean_long,
mean_lat,
data = ses_pilot_zips,
maptype = "toner-lite",
zoom = 4
)
usa_center = as.numeric(geocode("United States"))
USAMap = ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
ggmap(get_googlemap(center=usa_center, scale=2, zoom=4), extent="normal")
get_googlemap(center = usa_center, scale = 2, zoom = 5) %>%
ggmap()
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_zips <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
left_join(
three_digit_avg,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, mean_lat, mean_long)
usa_center <- as.numeric(geocode("United States"))
get_googlemap(center = usa_center, scale = 2, zoom = 5) %>%
ggmap()
get_googlemap(center = usa_center, scale = 2, zoom = 5, extent = "normal") %>%
ggmap()
get_googlemap(center = usa_center, scale = 2, zoom = 5, extent = "normal") %>%
ggmap()
get_googlemap(center = usa_center, scale = 2, zoom = 5) %>%
ggmap(extent = "normal")
?get_googlemap
?ggmap
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap(aes(x = mean_lat, y = mean_long, data = ses_pilot_zips))
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap() +
geom_point(aes(x = mean_long, y = mean_lat, data = ses_pilot_zips))
usa_center <- as.numeric(geocode("United States"))
usa_map <-
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap()
usa_map
usa_map +
geom_point(aes(mean_long, mean_lat, data = ses_pilot_zips))
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_zips <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
left_join(
three_digit_avg,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, mean_lat, mean_long)
usa_center <- as.numeric(geocode("United States"))
usa_map <-
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap()
usa_map +
geom_point(aes(mean_long, mean_lat, data = ses_pilot_zips))
data("zipcode")
three_digit_avg <-
zipcode %>%
mutate(prefix = str_sub(zip, 1, 3)) %>%
group_by(prefix) %>%
summarize(
mean_lat = mean(latitude, na.rm = TRUE),
mean_long = mean(longitude, na.rm = TRUE)
)
ses_pilot_zips <-
ses_pilot_raw %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
left_join(
three_digit_avg,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, mean_lat, mean_long)
usa_center <- as.numeric(geocode("United States"))
usa_map <-
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap()
usa_map +
geom_point(aes(x = mean_long, y = mean_lat, data = ses_pilot_zips))
