completion_time = completion_interval / lubridate::minutes()
)
return(clean_data)
}
pilot_ct_age_raw <-
ses_pilot_raw_completed %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Words Understood`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WG") %>%
rename(total = `Words Understood`) #change variable name so that we can bind with other df
wg_ct_age_raw <-
ses_wg_raw_completed %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Words Understood`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WG") %>%
rename(total = `Words Understood`) #change variable name so that we can bind with other df
ws_ct_age_raw <-
ses_ws_raw_completed %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Total Produced`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WS") %>%
rename(total = `Total Produced`)  #change variable name so that we can bind with other df
aggregate_ct_age_raw_completed <-
bind_rows(pilot_ct_age_raw, wg_ct_age_raw, ws_ct_age_raw) %>%
mutate(
quick_completion = completion_time <= 6
) %>%
count(quick_completion)
quick_completed_raw <- aggregate_ct_age_raw_completed %>% slice(2) %>% pull(n)
normally_completed_raw <-
aggregate_ct_age_raw_completed %>%
slice(1) %>%
pull(n)
pilot_ct_age <-
ses_pilot %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Words Understood`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WG") %>%
rename(total = `Words Understood`) #change variable name so that we can bind with other df
wg_ct_age <-
ses_wg %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Words Understood`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WG") %>%
rename(total = `Words Understood`) %>%  #change variable name so that we can bind with other df
bind_rows(pilot_ct_age)
ws_ct_age <-
ses_ws %>%
getCompletionInterval() %>%
select(subject_id, completion_time, `Total Produced`, age, study_name) %>%
mutate(age = as.numeric(age), instrument = "WS") %>%
rename(total = `Total Produced`)  #change variable name so that we can bind with other df
aggregate_ct_age_completed <-
bind_rows(pilot_ct_age, wg_ct_age, ws_ct_age) %>%
mutate(
quick_completion = completion_time <= 6
)
aggregate_ct_age_count <-
aggregate_ct_age_completed %>%
count(quick_completion)
quick_completed <- aggregate_ct_age_count %>% slice(2) %>% pull(n)
normally_completed <-
aggregate_ct_age_count %>%
slice(1) %>%
pull(n)
survey_maxes <-
tibble(
instrument = c("WG", "WS"),
max = c(396, 680)
)
aggregate_ct_age_completed %>%
ggplot(aes(completion_time, total, color = age)) +
facet_wrap(~ study_name) +
geom_jitter(position = position_jitter(width = 0.1), alpha = 0.5) +
coord_cartesian(xlim = c(0, 100)) +
ggthemes::theme_few() +
scale_color_viridis_c() +
coord_cartesian(xlim = c(0, 60)) +
scale_x_continuous(breaks = seq(0, 60, 5)) +
labs(
x = "Minutes to completion",
y = "Total words produced (in WS) or understood (in WG)",
title = "Time to completion in total sample, WebCDI WG and WS",
subtitle = "Dotted line represents 6 minute mark"
) +
geom_vline(xintercept = 6, linetype = "dotted")
wg_ct_age_cats <-
wg_ct_age %>%
filter(age > 7) %>%
mutate(age_bin = cut_interval(
age,
3,
labels = c("8 - 11 months", "12 - 14 months", "15 - 18 months")
))
boxplot_annotations_wg <-
wg_ct_age_cats %>%
count(age_bin) %>%
mutate(label = str_c("N = ", as.character(n)), completion_time = 65)
wg_ct_age_cats %>%
ggplot(aes(age_bin, completion_time)) +
geom_boxplot() +
geom_jitter(aes(color = study_name), alpha = 0.5) +
geom_text(aes(label = label), data = boxplot_annotations_wg) +
coord_cartesian(ylim = c(0, 70)) +
ggthemes::theme_few() +
labs(
x = "Age bin",
y = "Time to completion (mins)",
title = "Aggregate completion time data across current WG studies",
color = "Study name"
)
ws_ct_age_cats <-
ws_ct_age %>%
filter(age > 16) %>%
mutate(age_bin = cut_interval(
age,
3,
labels = c("16 - 21 months", "22 - 25 months", "26 - 30 months")
))
boxplot_annotations_ws <-
ws_ct_age_cats %>%
count(age_bin) %>%
mutate(label = str_c("N = ", as.character(n)), completion_time = 65)
ws_ct_age_cats %>%
ggplot(aes(age_bin, completion_time)) +
geom_boxplot() +
geom_jitter(aes(color = study_name), alpha = 0.5) +
geom_text(aes(label = label), data = boxplot_annotations_ws) +
coord_cartesian(ylim = c(0, 70)) +
ggthemes::theme_few() +
labs(
x = "Age bin",
y = "Time to completion (mins)",
title = "Aggregate completion time data across current WS studies",
color = "Study name"
)
aggregate_ct_age_completed %>%
ggplot(aes(completion_time)) +
geom_histogram(position = "dodge", binwidth = 2) +
facet_wrap(~study_name) +
coord_cartesian(xlim = c(0, 70)) +
theme_minimal()
aggregate_ct_age_completed %>%
mutate(age_bin = cut_interval(
age,
3,
labels = c("8 - 14 months", "15 - 21 months", "22 - 30 months")
)) %>%
ggplot(aes(age_bin, completion_time)) +
geom_boxplot() +
geom_jitter(aes(color = study_name), alpha = 0.5) +
coord_cartesian(ylim = c(0, 70)) +
ggthemes::theme_few() +
labs(
x = "Age bin",
y = "Time to completion (mins)",
title = "Aggregate completion time data across all current studies",
color = "Study name"
)
aggregate_ct_age_completed %>%
group_by(study_name) %>%
summarize(
median_ct = median(completion_time),
mean_ct = mean(completion_time, na.rm = TRUE),
min_ct = min(completion_time),
max_ct = max(completion_time)
)
ses_pilot_time_filtered <-
ses_pilot %>%
getCompletionInterval() %>%
filter(completion_time > 6)
ses_wg_time_filtered <-
ses_wg %>%
getCompletionInterval() %>%
filter(completion_time > 6)
ses_ws_time_filtered <-
ses_ws %>%
getCompletionInterval() %>%
filter(completion_time > 6)
getEthnicities <- function(data) {
clean_data <-
data %>%
mutate( #get rid of brackets in ethnicity column
child_ethnicity = str_replace_all(child_ethnicity, "[^[:upper:]]", "")
) %>%
mutate(
ethnicity_white = str_detect(child_ethnicity, "W"),
ethnicity_black = str_detect(child_ethnicity, "B"),
ethnicity_asian = str_detect(child_ethnicity, "A"),
ethnicity_native = str_detect(child_ethnicity, "N"),
ethnicity_other = str_detect(child_ethnicity, "O"),
ethnicity_mixed = str_length(child_ethnicity) > 1
)
old_ethnicity_numbers <-
tibble(
ethnicity = c("Asian", "Black", "Mixed", "White"),
`2007 manual` = c(.069, .105, .063, .733)
)
clean_data <-
clean_data %>%
mutate( #get rid of brackets in ethnicity column
child_ethnicity = str_replace_all(child_ethnicity, "[^[:upper:]]", "")
) %>%
mutate(
ethnicity = case_when(
str_length(child_ethnicity) > 1 ~ "mixed",
TRUE ~ child_ethnicity
) %>% fct_recode(
Asian = "A",
Black = "B",
Mixed = "mixed",
White = "W"
)
) %>%
filter(ethnicity != "") %>%
select(subject_id, child_ethnicity, ethnicity) %>%
count(ethnicity) %>%
mutate(`Current study` = n / sum(n)) %>%
left_join(
old_ethnicity_numbers,
by = c("ethnicity")
) %>%
pivot_longer(
cols = c(`Current study`, `2007 manual`),
names_to = "study",
values_to = "proportion"
)
return(clean_data)
}
#df for ethnicity plot
ses_wg_ethnicity <-
ses_wg %>%
bind_rows(ses_pilot) %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
getEthnicities()
ses_wg_ethnicity_n <-
nrow(
ses_wg %>%
bind_rows(ses_pilot) %>%
getCompletionInterval() %>%
filter(completion_time > 6)
)
ses_wg_ethnicity %>%
ggplot(aes(ethnicity, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(
x = "Ethnicity",
y = "Proportion of respondents",
title = "Current Words and Gestures study compared to 2007 manual",
subtitle = "Excludes children who are prematurely born, are multilingual, were born underweight,\nhave vision or hearing loss, or who completed the survey in under 6 minutes"
) +
theme_few() +
theme(legend.title = element_blank()) +
annotate(
"text",
label = str_c("N = ", ses_wg_ethnicity_n),
x = 3.5,
y = 0.85,
hjust = "center"
)
ses_ws_ethnicity <-
ses_ws %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
getEthnicities()
ses_ws_ethnicity_n <-
ses_ws %>%
getCompletionInterval() %>%
filter(completion_time > 6) %>%
nrow()
ses_ws_ethnicity %>%
ggplot(aes(ethnicity, proportion, fill = study)) +
geom_col(position = "dodge") +
labs(
x = "Ethnicity",
y = "Proportion of respondents",
title = "Current WS compared to 2007 manual",
subtitle = "Excludes children who are prematurely born, are multilingual, were born underweight,\nhave vision or hearing loss, or who completed the survey in under 6 minutes"
) +
theme_few() +
theme(legend.title = element_blank()) +
annotate(
"text",
label = str_c("N = ", ses_ws_ethnicity_n),
x = 2.0,
y = 0.85,
hjust = "center"
)
getMaternalEd <- function(data) {
clean_data <-
data %>%
select(subject_id, mother_education, study_name) %>%
mutate(
maternal_ed = case_when(
mother_education <= 11 ~ "Some high school or less",
mother_education == 12 ~ "High school diploma",
mother_education %in% seq.int(13, 15) ~
"Some college education",
mother_education >= 16 ~ "College diploma or more"
)
)
}
aggregate_maternal_ed <-
bind_rows(
ses_pilot_time_filtered %>% getMaternalEd(),
ses_wg_time_filtered %>% getMaternalEd(),
ses_ws_time_filtered %>% getMaternalEd()
)
old_props <-
tibble(
maternal_ed = c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
),
study_name = "2007 manual",
`Study proportion` = c(.075, .2385, .248, .4385)
)
aggregate_maternal_ed %>%
count(maternal_ed, study_name) %>%
group_by(study_name) %>%
mutate(
`Study proportion` = n / sum(n)
) %>%
select(-n) %>%
bind_rows(old_props) %>%
mutate(
maternal_ed = fct_relevel(
maternal_ed,
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
) %>%
ggplot(aes(maternal_ed, `Study proportion`, fill = `study_name`)) +
geom_col(position = "dodge") +
labs(
x = "Education Level",
y = "Proportion of respondents"
) +
theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 10, vjust = 0.9, hjust = 1, size = 8),
axis.title.x = element_text()
)
aggregate_maternal_ed %>%
count(maternal_ed) %>%
mutate(
study_name = "Current studies",
`Study proportion` = n / sum(n)
) %>%
select(-n) %>%
bind_rows(old_props) %>%
mutate(
maternal_ed = fct_relevel(
maternal_ed,
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
) %>%
ggplot(aes(maternal_ed, `Study proportion`, fill = `study_name`)) +
geom_col(position = "dodge") +
labs(
x = "Education Level",
y = "Proportion of respondents"
) +
theme_few() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 10, vjust = 0.9, hjust = 1, size = 8),
axis.title.x = element_text()
)
all_wg_time_filtered <-
ses_pilot_time_filtered %>%
bind_rows(ses_wg_time_filtered)
wg_maternal_ed <-
bind_rows(
ses_pilot_time_filtered %>% getMaternalEd(),
ses_wg_time_filtered %>% getMaternalEd()
) %>%
left_join(
all_wg_time_filtered %>%
select(subject_id, study_name, age, `Words Understood`, `Words Produced`),
by = c("study_name", "subject_id")
) %>%
mutate_at(
.funs = ~case_when(
is.na(.) ~ 0, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Words"))
) %>%
mutate(
age = as.numeric(age),
maternal_ed = fct_relevel(
.f = maternal_ed,
c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
)
)
ws_maternal_ed <-
ses_ws_time_filtered %>%
getMaternalEd() %>%
left_join(
ses_ws_time_filtered %>%
select(subject_id, study_name, age, `Total Produced`),
by = c("study_name", "subject_id")
) %>%
mutate_at(
.funs = ~case_when(
is.na(.) ~ 0, #get rid of entries that have 'less than' signs in them
TRUE ~ as.numeric(.)
),
.vars = vars(contains("Words"))
) %>%
mutate(
age = as.numeric(age),
maternal_ed = fct_relevel(
.f = maternal_ed,
c(
"Some high school or less",
"High school diploma",
"Some college education",
"College diploma or more"
)
)
)
wg_maternal_ed %>%
ggplot(aes(age, `Words Understood`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
coord_cartesian(ylim = c(-20, 420)) +
ggthemes::theme_few() +
labs(title = "Age and words understood, WG")
wg_maternal_ed %>%
ggplot(aes(age, `Words Produced`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
ggthemes::theme_few() +
labs(title = "Age and words produced, WG")
ws_maternal_ed %>%
ggplot(aes(age, `Total Produced`, color = maternal_ed)) +
geom_jitter(position = position_jitter(width = 0.1, height = 0)) +
geom_smooth(method = "lm", level = .9) +
ggthemes::theme_few() +
labs(title = "Age and words produced, WG")
View(ses_ws_time_filtered)
all_zips <-
bind_rows(
ses_pilot_raw %>% select(subject_id, zip_code),
ses_round_1_wg_raw %>% select(subject_id, zip_code),
ses_round_1_ws_raw %>% select(subject_id, zip_code)
)
View(all_zips)
all_zips <-
bind_rows(
ses_pilot_raw %>% select(subject_id, zip_code),
ses_round_1_wg_raw %>% select(subject_id, zip_code),
ses_round_1_ws_raw %>% select(subject_id, zip_code)
) %>%
filter(!is.na(zip_code))
View(all_zips)
data("zipcode")
zip_code_data <- read_csv(zip_code_path)
View(zip_code_data)
zip_code_data <- read_csv(zip_code_path)
View(zip_code_data)
zip_code_data <- read_csv(zip_code_path)
View(zip_code_data)
ses_pilot_cities <-
all_zips %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
mutate(zip_code = as.numeric(zip_code)) %>%
left_join(
zip_code_data,
by = c("zip_code" = "ZIP prefix")
) %>%
select(subject_id, zip_code, city)
ses_pilot_cities <-
all_zips %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
mutate(zip_code = as.numeric(zip_code)) %>%
left_join(
zip_code_data,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, zip_code, city)
View(ses_pilot_cities)
ses_pilot_cities <-
all_zips %>%
mutate(zip_code = str_replace_all(zip_code, "[^[:digit:]]", "")) %>%
mutate(zip_code = as.numeric(zip_code)) %>%
left_join(
zip_code_data,
by = c("zip_code" = "prefix")
) %>%
select(subject_id, zip_code, region, city)
usa_center <- as.numeric(geocode("United States"))
usa_map <-
get_googlemap(center = usa_center, scale = 2, zoom = 4) %>%
ggmap()
usa_map
