devtools::install_github("joepowers16/breadcrumbs")
?here::here
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
source("file_paths.R")
?source
source(path(here::here, "file_paths.R"))
project_root <- here::here()
source(path(project_root, "file_paths.R"))
library(fs)
library(here)
project_root
project_root <- here::here
#build paths for data
pilot_1_data_path <-
fs::path(project_root, "data", "raw", "webcdi_full_info.csv")
#set project root
project_root <- here::here()
#build paths for data
pilot_1_data_path <-
fs::path(project_root, "data", "raw", "webcdi_full_info.csv")
source(path(project_root, "file_paths.R"))
source(path(project_root, "file_paths.R"))
pilot_1_data_path <-
fs::path(project_root, "data", "raw", "webcdi_full_info.csv")
source('~/Desktop/norming_webcdi/file_paths.R', echo=TRUE)
source(path(project_root, "file_paths.R"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
source(path(here::here(), "file_paths.R"))
source("file_paths.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(png)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(magrittr)
library(langcog)
library(tidyboot)
library(fs)
source(path(here::here(), "file_paths.R"))
# Chunk 1
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
# Chunk 2
library(tidyverse)
library(langcog)
library(stringr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
library(fs)
theme_set(theme_bw())
project_root <- here::here() #gets the root directory of the whole project.
# Chunk 3
files_e1_c1 <- dir_ls(fs::path(project_root, "data_e1", "coder_1")) #get list of paths to files
e1_c1 <- data.frame()
for (f in files_e1_c1) {
jd <- read_csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
#get list of paths to ref files, whatever the hell those are
files_e1_c1_ref <- dir_ls(fs::path(project_root, "data_e1", "coder_1_ref"))
for (f in files_e1_c1_ref) {
#jf <- paste("data_e1/coder_1_ref/", f ,sep = "")
jd <- read.csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal + 1,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
e1_c1 <-
e1_c1 %>%
mutate(
SID = str_extract(SID, "\\d{5,6}_\\d{2}") #extract the subject ID from the file path
)
# Chunk 4
files_e1_c2 <- dir_ls(fs::path(project_root, "data_e1", "coder_2")) #get list of paths to files
e1_c2_ref <- data.frame()
for (f in files_e1_c2) {
jd <- read.csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
num_looks_c2_ref = jd$reference.num_looks
)
e1_c2_ref <- bind_rows(e1_c2_ref, id)
}
files_e1_c2_ref <- dir_ls(fs::path(project_root, "data_e1", "coder_2_ref"))
for (f in files_e1_c2_ref) {
jd <- read.csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal + 1,
phase = as.numeric(jd$phase.1_2_3_4),
num_looks_c2_ref = jd$reference.num_looks
)
e1_c2_ref <- bind_rows(e1_c2_ref, id)
}
e1_c2_ref <-
e1_c2_ref %>%
mutate(
SID = str_extract(SID, "\\d{5,6}_\\d{2}") #extract the subject ID from the file path
)
#NOTE- have to add 1 here because script output lines 1-48 and manual export was 0-47
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(tidyverse)
library(langcog)
library(stringr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
library(fs)
theme_set(theme_bw())
project_root <- here::here() #gets the root directory of the whole project.
files_e1_c1 <- dir_ls(fs::path(project_root, "data_e1", "coder_1")) #get list of paths to files
e1_c1 <- data.frame()
for (f in files_e1_c1) {
jd <- read_csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
#get list of paths to ref files, whatever the hell those are
files_e1_c1_ref <- dir_ls(fs::path(project_root, "data_e1", "coder_1_ref"))
for (f in files_e1_c1_ref) {
#jf <- paste("data_e1/coder_1_ref/", f ,sep = "")
jd <- read.csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal + 1,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
e1_c1 <-
e1_c1 %>%
mutate(
SID = str_extract(SID, "\\d{5,6}_\\d{2}") #extract the subject ID from the file path
)
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(tidyverse)
library(langcog)
library(stringr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
library(fs)
theme_set(theme_bw())
project_root <- here::here() #gets the root directory of the whole project.
files_e1_c1 <- dir_ls(fs::path(project_root, "data_e1", "coder_1")) #get list of paths to files
e1_c1 <- data.frame()
files_e1_c1 <- dir_ls(fs::path(project_root, "data_e1", "coder_1")) #get list of paths to files
e1_c1 <- data.frame()
for (f in files_e1_c1) {
jd <- read_csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
#get list of paths to ref files, whatever the hell those are
files_e1_c1_ref <- dir_ls(fs::path(project_root, "data_e1", "coder_1_ref"))
for (f in files_e1_c1_ref) {
#jf <- paste("data_e1/coder_1_ref/", f ,sep = "")
jd <- read.csv(f)
id <- data.frame(
SID = f,
line = jd$phase.ordinal + 1,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude
)
e1_c1 <- bind_rows(e1_c1, id)
}
e1_c1 <-
e1_c1 %>%
mutate(
SID = str_extract(SID, "\\d{5,6}_\\d{2}") #extract the subject ID from the file path
)
